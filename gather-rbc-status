#!/bin/bash
# 2017-02-23 James Boyle
#  gather RBC summary information from multiple remote hosts

die () {
    printf "Error, exiting: " 1>&2
    echo "$@" 1>&2
    exit 255
}

usage () {
    printf "%s usage summary:\n" "$0" 1>&2
    printf "   %s [ -i <inventory file> ] [-e <email address> ] [ -o <output file> ]\n" "$0" 1>&2
    printf "   -e: email a copy of the results to the specified address\n" 1>&2
    printf "   -h: print this usage summary\n" 1>&2
    printf "   -i: inventory file ; a list of hosts, one per line\n" 1>&2
    printf "   -o: write output to a file\n" 1>&2
    printf "   -t: generate tabular STDOUT from output file, requires -o\n" 1>&2
}

email_results () {
    mail -s "${SUBJECT}" "${2}" < "${1}"
}

for X in getopt mail hostname lsof wc column awk rpm sed head uname dd tr cut date logger shutdown; do
    which "${X}" >/dev/null 2>&1 || die "required application ${X} not found"
done

DATEY="$(date +%Y-%m-%d\ %H:%M:%S)"
HOSTNAME="$(hostname)"
#TMPFILE=/tmp/"$(dd if=/dev/urandom bs=1 count=256 2>/dev/null |tr -c -d '0-9a-f' |cut -c-7)"
INVENTORY="localhost"
OFILE=""
TABULATE=0

getopt --test > /dev/null
if [[ $? -ne 4 ]]; then
    die "getopt not suited to this environment"
fi

SO="e:hi:o:t"
LO="email,help,inventory,output,tabular"
PARAMS=$(getopt --options ${SO} --longoptions ${LO} --name "$0" -- "$@")
[ $? -ne 0 ] && usage && die
eval set -- "$PARAMS"

while [[ $1 != "--" ]] ; do
    case $1 in
	-e|--email)
	    EMAIL="$2"
	    shift
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	-i|--inventory)
	    INVENTORY="$2"
	    shift
	    ;;
	-o|--output)
	    OFILE="$2"
	    shift
	    ;;
	-t|--tabular)
	    TABULATE=1
	    ;;
	*)
	    usage
	    die "Internal option parsing error: $key"
	    ;;
    esac
    shift
done

if [ -n "${OFILE}" ]; then
    exec 5>&1 > "${OFILE}" || die "error writing to output file ${OFILE}"
else
    [ $TABULATE -eq 1 ] && die "output file not specified and is required for tabular output"
fi

#printf "EMAIL=%s,INVENTORY=%s,OUTPUT=%s\n" "$EMAIL" "$INVENTORY" "$OFILE" 1>&2
printf "RBC status inquiry initiated %s from %s\n" "${DATEY}" "${HOSTNAME}"
printf "Hostname,OS Version,Up Since,RBC Status\n"

if [ "$INVENTORY" != "localhost" ] ; then
    [ -s "${INVENTORY}" ] || die "bad inventory file"
    for X in $(cat "$INVENTORY"); do
	ssh "${X}" sudo /usr/local/sbin/rbc -s 2>/dev/null
	[ $? -eq 255 ] && printf "%s,ERROR,ERROR,ERROR\n" "${X}"
    done
else
    ssh "${INVENTORY}" sudo /usr/local/sbin/rbc -s 2>/dev/null
fi

[ -n "${OFILE}" ] && exec 1>&5
if [ $TABULATE -eq 1 ]; then
    head -1 "${OFILE}"
    sed '1d' "${OFILE}" |column -t -s,
fi
